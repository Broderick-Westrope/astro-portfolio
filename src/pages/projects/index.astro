---
import { projectData, mentions } from './data'
import BaseLayout from '@/layouts/BaseLayout.astro'
import ListProjects from '@/components/ListProjects.svelte'
import { Octokit } from '@octokit/rest';
import type { ProjectData } from '@/types';
import ListPosts from '@/components/ListPosts.svelte';

const octokit = new Octokit({
  auth: import.meta.env.GITHUB_TOKEN
})

let mentionData: ProjectData[] = new Array(mentions.length)

for (let i = 0; i < mentions.length; i++) {
  const response = await octokit.request('GET /repos/' + mentions[i])

  let element = {
    title: response.data.name,
    description: response.data.description,
    href: response.data.html_url
  }
  mentionData[i] = element
}
---

<BaseLayout title="Projects" description="List of projects that I am proud of">
  <h1 class="mb-10 text-6xl font-extrabold opacity-50">Projects</h1>
  <div class="mb-16 sm:mb-24">
    {
      projectData.length > 0 && (
        <div>
          {projectData.map((i) => (
            <div class="mb-10">
              <div class="py-10 flex flex-col gap-2">
              <h2 class="select-none pointer-events-none text-4xl font-bold">
                  {i.title}
              </h2>
              {
                i.description && (
                  <p class="text-lg">
                    {i.description}
                  </p>
                )
              }
              </div>
              <ListProjects data={i.projects} />
            </div>
          ))}

          {
                mentions.length > 0 && (
            <div class="mb-10">
              <div class="py-10 flex flex-col gap-2">
              <h2 class="select-none pointer-events-none text-4xl font-bold">
                  Honourable Mentions
              </h2>
                <p class="text-lg">
                  Projects that I have not worked on but have inspired me as a developer.
                </p>
              </div>
              <ListProjects client:load data={mentionData} />
            </div>
                            )
              }
        </div>
      )
    }
  </div>
</BaseLayout>